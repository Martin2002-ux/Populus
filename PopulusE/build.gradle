/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.5.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'

    id 'org.openjfx.javafxplugin' version '0.0.9'
    id 'org.beryx.jlink' version '2.21.1'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
//    flatDir {
//    	dirs 'libs'
//    }
}

dependencies {
    //JAR files for application
    implementation files('libs/jcommon-1.0.21.jar')
    implementation files('libs/jfreechart-1.0.17.jar')
    implementation files('libs/jcchart401K.jar')
    implementation files('libs/acrobat.jar')

	//It would be nice to include the org.jree libraries
	//from repo, but they are not "module ready"
    //implementation 'org.jfree:jcommon:1.0.24'
    //Todo: Try out latest version 1.5.0
    //implementation 'org.jfree:jfreechart:1.0.17'

    //acrobat file has a top-level sample class that breaks modules.
    //implementation 'com.adobe.acrobat:acrobat:1.1'

    implementation 'gov.nist.math:jama:1.0.3'

    implementation 'com.google.guava:guava:29.0-jre'

    // Use JUnit Jupiter API for testing.
    //testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    //JUnit 5.5 can't handle modules, so reverting to 5.4 until
    //the issue is resolved
    //https://github.com/java9-modularity/gradle-modules-plugin/issues/129
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'

    // Use JUnit Jupiter Engine for testing.
    //testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.2'
}

tasks.compileJava.doLast {
    //Copy over images to the build directory.
    //These should really be in the resource directory and not copied out like this.
    copy {
        from ('src/main/java') {
            include '**/*.png'
            include '**/*.gif'
        }
        into 'build/classes/java/main'
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'edu.umn.ecology.populus.core.PopRun'
    }
    into('lib') {
        from 'res/reqlibs'
    }
}

application {
    // Define the main class for the application.
    mainClassName = 'edu.umn.ecology.populus.core.PopRun'
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}
